
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Audio_fileScalarFieldEnum = {
  id: 'id',
  path: 'path',
  content: 'content',
  creator_id: 'creator_id',
  create_time: 'create_time',
  update_time: 'update_time',
  is_delete: 'is_delete',
  status: 'status',
  name: 'name'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  parent_id: 'parent_id',
  name: 'name',
  sort_order: 'sort_order',
  description: 'description',
  is_root: 'is_root',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Dictionary_categoryScalarFieldEnum = {
  id: 'id',
  dictionary_id: 'dictionary_id',
  category_id: 'category_id',
  sort_order: 'sort_order',
  created_at: 'created_at'
};

exports.Prisma.Dictionary_wordScalarFieldEnum = {
  dictionary_id: 'dictionary_id',
  word_id: 'word_id',
  created_at: 'created_at',
  id: 'id'
};

exports.Prisma.English_dictionaryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  image_url: 'image_url',
  author: 'author',
  isbn: 'isbn',
  publication_date: 'publication_date',
  publisher: 'publisher',
  create_time: 'create_time',
  update_time: 'update_time',
  is_delete: 'is_delete',
  total_words: 'total_words',
  published_words: 'published_words',
  approved_words: 'approved_words'
};

exports.Prisma.English_wordScalarFieldEnum = {
  id: 'id',
  word_head: 'word_head',
  thumbnail: 'thumbnail',
  info: 'info',
  create_time: 'create_time',
  update_time: 'update_time',
  is_delete: 'is_delete',
  status: 'status',
  manual_score: 'manual_score',
  ai_score: 'ai_score',
  reviewer: 'reviewer'
};

exports.Prisma.English_word_change_logScalarFieldEnum = {
  id: 'id',
  english_word_id: 'english_word_id',
  field_name: 'field_name',
  old_value: 'old_value',
  new_value: 'new_value',
  change_time: 'change_time',
  changed_by: 'changed_by'
};

exports.Prisma.Media_creatorScalarFieldEnum = {
  id: 'id',
  word_id: 'word_id',
  media_type: 'media_type',
  media_url: 'media_url',
  creator_id: 'creator_id',
  info: 'info',
  created_at: 'created_at'
};

exports.Prisma.PostScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  tags: 'tags',
  thumbNum: 'thumbNum',
  favourNum: 'favourNum',
  userId: 'userId',
  createTime: 'createTime',
  updateTime: 'updateTime',
  isDelete: 'isDelete'
};

exports.Prisma.Post_favourScalarFieldEnum = {
  id: 'id',
  postId: 'postId',
  userId: 'userId',
  createTime: 'createTime',
  updateTime: 'updateTime'
};

exports.Prisma.Post_thumbScalarFieldEnum = {
  id: 'id',
  postId: 'postId',
  userId: 'userId',
  createTime: 'createTime',
  updateTime: 'updateTime'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  userAccount: 'userAccount',
  userPassword: 'userPassword',
  unionId: 'unionId',
  mpOpenId: 'mpOpenId',
  userName: 'userName',
  userAvatar: 'userAvatar',
  userProfile: 'userProfile',
  userRole: 'userRole',
  createTime: 'createTime',
  updateTime: 'updateTime',
  isDelete: 'isDelete'
};

exports.Prisma.User_configScalarFieldEnum = {
  user_id: 'user_id',
  config_json: 'config_json',
  update_time: 'update_time'
};

exports.Prisma.Word_status_changeScalarFieldEnum = {
  id: 'id',
  word_id: 'word_id',
  status: 'status',
  info: 'info',
  comment: 'comment',
  create_time: 'create_time',
  update_time: 'update_time',
  is_delete: 'is_delete'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.audio_fileOrderByRelevanceFieldEnum = {
  path: 'path',
  content: 'content',
  status: 'status',
  name: 'name'
};

exports.Prisma.categoryOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.english_dictionaryOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description',
  image_url: 'image_url',
  author: 'author',
  isbn: 'isbn',
  publisher: 'publisher'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.english_wordOrderByRelevanceFieldEnum = {
  word_head: 'word_head',
  thumbnail: 'thumbnail',
  status: 'status'
};

exports.Prisma.english_word_change_logOrderByRelevanceFieldEnum = {
  field_name: 'field_name',
  old_value: 'old_value',
  new_value: 'new_value'
};

exports.Prisma.media_creatorOrderByRelevanceFieldEnum = {
  media_type: 'media_type',
  media_url: 'media_url',
  info: 'info'
};

exports.Prisma.postOrderByRelevanceFieldEnum = {
  title: 'title',
  content: 'content',
  tags: 'tags'
};

exports.Prisma.userOrderByRelevanceFieldEnum = {
  userAccount: 'userAccount',
  userPassword: 'userPassword',
  unionId: 'unionId',
  mpOpenId: 'mpOpenId',
  userName: 'userName',
  userAvatar: 'userAvatar',
  userProfile: 'userProfile',
  userRole: 'userRole'
};

exports.Prisma.word_status_changeOrderByRelevanceFieldEnum = {
  status: 'status',
  comment: 'comment'
};


exports.Prisma.ModelName = {
  audio_file: 'audio_file',
  category: 'category',
  dictionary_category: 'dictionary_category',
  dictionary_word: 'dictionary_word',
  english_dictionary: 'english_dictionary',
  english_word: 'english_word',
  english_word_change_log: 'english_word_change_log',
  media_creator: 'media_creator',
  post: 'post',
  post_favour: 'post_favour',
  post_thumb: 'post_thumb',
  user: 'user',
  user_config: 'user_config',
  word_status_change: 'word_status_change'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
